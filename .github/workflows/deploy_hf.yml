name: Deploy to Hugging Face Hub

# Déclencheur : se lance à chaque push sur la branche 'main'
on:
  push:
    branches:
      - main

# Variables d'environnement pour tout le job, pour la propreté
env:
  HF_MODEL_REPO: ${{ secrets.GITHUB_REPOSITORY }}
  MODEL_FILENAME: model.joblib
  
jobs:
  deploy:
    name: Train and Deploy Model
    runs-on: ubuntu-latest # Utilise une machine virtuelle Linux à jour
    
    steps:
      # Étape 1: Récupérer le code du dépôt
      - name: Checkout repository
        uses: actions/checkout@v3
        # On récupère l'historique complet pour que LFS fonctionne correctement
        with:
          fetch-depth: 0 

      # Étape 3: Mettre en place l'environnement Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' # Spécifier une version pour la reproductibilité
          
      # Étape 4: Installer les dépendances
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Étape 5: Entraîner le modèle
      # Cette étape génère l'artefact (le modèle) qui sera déployé.
      - name: Train model
        run: python model.py --action train
        
      - name: Push to Hugging Face Hub
        env:
          HUGGING_FACE_HUB_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          python -c "
          from huggingface_hub import HfApi
          import os

          # Récupérer les variables d'environnement
          repo_id = os.getenv('HF_MODEL_REPO')
          model_filename = os.getenv('MODEL_FILENAME')
          
          print(f'Déploiement sur le dépôt : {repo_id}')
          print(f'Fichier modèle à pousser : {model_filename}')

          api = HfApi()
          
          # --- CORRECTION ICI ---
          # On utilise la concaténation de chaînes au lieu d'une f-string complexe
          # pour éviter les conflits de guillemets.
          model_path_in_repo = model_filename
          readme_path_in_repo = 'README.md'

          # Push du fichier de modèle
          api.upload_file(
              path_or_fileobj='./' + model_filename,
              path_in_repo=model_path_in_repo,
              repo_id=repo_id,
              repo_type='model'
          )
          
          # Push du README
          api.upload_file(
              path_or_fileobj='./README.md',
              path_in_repo=readme_path_in_repo,
              repo_id=repo_id,
              repo_type='model'
          )
          
          print('Fichiers poussés avec succès sur le Hub !')
          "
